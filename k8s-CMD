kubectl get nodes 

kubectl get pods -A || kubectl get pods || kubectl get pods -o wide || kubectl get pods -n $namespace -o wide | grep flannel || kubectl get pods -n kube-system -o wide | grep flannel || kubectl delete pod nginx-deployment-96b9d695-whh6b || 

kubectl describe pod nginx | grep "" Container ID" || 

kubectl get daemonset -n kube-flannel || 

ctr -n k8s.io container list

crictl ps

kubectl config view

openssl genrsa -out vishwa.key 2048 || openssl req -new -key vishwa.key -out vishwa.csr -subj "/CN=vishwa/O=group1" || cat vishwa.csr | base64 | tr -d '\n' ||

kubectl apply -f csr.yaml ||  kubectl certificate approve vishwa || kubectl get csr vishwa -o jsonpath='{.status.certificate}' | base64 --decode > vishwa.crt || kubectl get csr vishwa || 

kubectl apply -f rolerb.yaml || kubectl get role pod-reader -n default || kubectl describe role pod-reader -n default || kubectl describe rolebinding read-pods -n default || 

kubectl config set-credentials vishwa --client-certificate=vishwa.crt --client-key=vishwa.key || kubectl config view --minify --raw | grep name: || kubectl config get-users || 

kubectl config set-context vishwa-context --cluster=kubernetes --namespace=default --user=vishwa || kubectl config use-context vishwa-context || kubectl config get-contexts ||

kubectl apply -f nginx-deployment.yaml || kubectl get deployment || kubectl get deployment -o wide || kubectl delete deployment nginx-deployment || 

kubectl create deployment nginx --image=nginx --dry-run=client -o json > deploy.json || kubectl create deployment nginx --image=nginx --dry-run=client -o yaml > deploy.yaml ||

kubectl apply -f nginx-service.yaml || kubectl get svc || kubectl delete svc nginx-service ||

kubectl create serviceaccount vishwa --namespace default || kubectl get serviceaccount vishwa -n default || kubectl describe serviceaccount vishwa -n default ||

kubectl create clusterrolebinding vishwa-clusteradmin-binding --clusterrole=cluster-admin --serviceaccount=default:vishwa || kubectl get clusterrolebinding vishwa-clusteradmin-binding -o yaml || kubectl create token vishwa ||

TOKEN=eyJhbGciOiJSUzI1NiIsImtpZCI6Ii1za3JKcnVwSGtCRHJPSFNCcmRmYTNsNGpObW9XOHB2UU1JTEFuRExQaVUifQ.eyJhdWQiOlsiaHR0cHM6Ly9rdWJlcm5ldGVzLmRlZmF1bHQuc3ZjLmNsdXN0ZXIubG9jYWwiXSwiZXhwIjoxNzU0MjM3Nzg5LCJpYXQiOjE3NTQyMzQxODksImlzcyI6Imh0dHBzOi8va3ViZXJuZXRlcy5kZWZhdWx0LnN2Yy5jbHVzdGVyLmxvY2FsIiwianRpIjoiNjkwMTUwMjQtOGQ5ZS00ZDYyLThjZWYtNWIxMTMxNTU1NDE2Iiwia3ViZXJuZXRlcy5pbyI6eyJuYW1lc3BhY2UiOiJkZWZhdWx0Iiwic2VydmljZWFjY291bnQiOnsibmFtZSI6InZpc2h3YSIsInVpZCI6IjQ4ZDY4NTBkLTY1NGUtNGM2YS04NjI2LTRhMTI1ZWZlM2NhZSJ9fSwibmJmIjoxNzU0MjM0MTg5LCJzdWIiOiJzeXN0ZW06c2VydmljZWFjY291bnQ6ZGVmYXVsdDp2aXNod2EifQ.ZmIOSBuanREkeijxSfmzAJzOzNuasmV3KVtvZRI5fk3Cfngouaqrnp39QoGwW-RIz6d9Mhz-ASnm1FVkgmy2xEmVk71q-BlNNKMD7-LK_ste7ulr2Kgw_WUjXU5wVYqZtK7gdUuggO6BnNW7vI7E6F2QRwEInhx6CEJnNRWftsRh6DwkiaSHrGlJTYTVBWyK08Fur2Ad4YHWVHThlqk_DmqGUzqyAxqx7k46xS9Qc0YmfJJ_TqjEgXdIQyu7B3DbbxKD_jowyaUaoCe1dOaoXe62urjxNk8BoPObLi_646gSyuZRCcFMnH7O8KY58HQpbBSGZvgQ3DgbcGaKRcSgsg

APISERVER=$(kubectl config view --minify -o jsonpath='{.clusters[0].cluster.server}') || kubectl config view ||

curl -k -X GET $APISERVER/apis/apps/v1/namespaces/default/deployments   -H "Authorization: Bearer $TOKEN"

curl -k -X GET $APISERVER/api/v1/namespaces/default/pods   -H "Authorization: Bearer $TOKEN"

curl -k -X POST $APISERVER/apis/apps/v1/namespaces/default/deployments -H "Authorization: Bearer $TOKEN" -H 'Content-Type: application/json' -d @deploy.json

export KUBECONFIG

kubectl run nginx --image=nginx

waeve-flannel-calico-cilium

ip link show || ip netns list || ip netns exec **** || ip netns **** ip link

kubectl create deploy demo-nginx --image=nginx --replica=3 || kubectl get rs || kubectl delete pod $pod-name --force || kubectl describe deploy

ps -ef || docker run -d --name $my-container --memory=512 --cpu=1 nginx:latest || ps -aux | grep '[n]ginx' | sort -n -k 2 | head -n 1 | awk '{print $2}' || lsns -p pid 

export KUBECONFIG=~/.kube/config || kubectl get nodes --kubeconfig ~/.kube/config

kubectx

kubectl proxy || curl localhost:8001/apis

kubectl get nodes worker -oyaml | grep CIDR ||
